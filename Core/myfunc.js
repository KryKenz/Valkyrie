("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
/*
‚ïî‚ßâ‡ºª [ ùêïùê•ùê§ùê≤ùê´ùêûüïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨! 
‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´ùê¨ +918436686758,917430922909
‚ïë 
‚ïë We won't be responsible for any kind of ban due to this bot.
‚ïë ŒΩ‚Ñì–∫—É—è—î was made for fun purpose and to make group management easier.
‚ïë It's your concern if you spam and gets your account banned.
‚ïë Also, Forks won't be entertained.
‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
‚ïë In short, Fork At Your Own Risk.
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
*/
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
process
.on("unhandledRejection", (reason, p) => {
console.error(reason, "Unhandled Rejection at Promise", p);
})
.on("uncaughtException", (err) => {
console.error(err, "Uncaught Exception thrown");
});
var { proto, delay, getContentType } = require("@adiwajshing/baileys");
var chalk = require("chalk");
var fs = require("fs");
var { unlink } = require("fs").promises;
var Crypto = require("crypto");
var axios = require("axios");
var moment = require("moment-timezone");
var { sizeFormatter } = require("human-readable");
var util = require("util");
var jimp = require("jimp");
var { defaultMaxListeners } = require("stream");
var child_process = require("child_process");
var ffmpeg = require("fluent-ffmpeg");

var unixTimestampSeconds = (date = new Date()) =>
Math.floor(date.getTime() / 1000);
var sleep = (ms) => {
return new Promise((resolve) => {
setTimeout(resolve, ms);
});
};
exports.unixTimestampSeconds = unixTimestampSeconds;

exports.generateMessageTag = (epoch) => {
let tag = (0, exports.unixTimestampSeconds)().toString();
if (epoch) tag += ".--" + epoch; // attach epoch if provided
return tag;
};

exports.processTime = (timestamp, now) => {
return moment.duration(now - moment(timestamp * 1000)).asSeconds();
};

exports.getRandom = (ext) => {
return `${Math.floor(Math.random() * 10000)}${ext}`;
};

exports.getBuffer = async (url, options) => {
try {
options ? options : {};
var res = await axios({
method: "get",
url,
headers: {
DNT: 1,
"Upgrade-Insecure-Request": 1,
},
...options,
responseType: "arraybuffer",
});
return res.data;
} catch (err) {
return err;
}
};

exports.fetchJson = async (url, options) => {
try {
options ? options : {};
var res = await axios({
method: "GET",
url: url,
headers: {
"User-Agent":
"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36",
},
...options,
});
return res.data;
} catch (err) {
return err;
}
};

exports.runtime = function (seconds) {
seconds = Number(seconds);
var d = Math.floor(seconds / (3600 * 24));
var h = Math.floor((seconds % (3600 * 24)) / 3600);
var ŒΩ‚Ñìc–ΩŒ±—Ç = Math.floor((seconds % 3600) / 60);
var s = Math.floor(seconds % 60);
var dDisplay = d > 0 ? d + (d == 1 ? " day, " : " days, ") : "";
var hDisplay = h > 0 ? h + (h == 1 ? " hour, " : " hours, ") : "";
var mDisplay =
ŒΩ‚Ñìc–ΩŒ±—Ç > 0 ? ŒΩ‚Ñìc–ΩŒ±—Ç + (ŒΩ‚Ñìc–ΩŒ±—Ç == 1 ? " minute, " : " minutes, ") : "";
var sDisplay = s > 0 ? s + (s == 1 ? " second" : " seconds") : "";
return dDisplay + hDisplay + mDisplay + sDisplay;
};

exports.clockString = function (seconds) {
let h = isNaN(seconds) ? "--" : Math.floor((seconds % (3600 * 24)) / 3600);
let ŒΩ‚Ñìc–ΩŒ±—Ç = isNaN(seconds) ? "--" : Math.floor((seconds % 3600) / 60);
let s = isNaN(seconds) ? "--" : Math.floor(seconds % 60);
return [h, ŒΩ‚Ñìc–ΩŒ±—Ç, s].map((v) => v.toString().padStart(2, 0)).join(":");
};

exports.sleep = async (ms) => {
return new Promise((resolve) => setTimeout(resolve, ms));
};

exports.isUrl = (url) => {
return url.match(
new RegExp(
/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)/,
"gi"
)
);
};

exports.getTime = (format, date) => {
if (date) {
return moment(date).locale("id").format(format);
} else {
return moment.tz("Asia/Jakarta").locale("id").format(format);
}
};

exports.formatDate = (n, locale = "id") => {
let d = new Date(n);
return d.toLocaleDateString(locale, {
weekday: "long",
day: "numeric",
month: "long",
year: "numeric",
hour: "numeric",
minute: "numeric",
second: "numeric",
});
};

exports.formatp = sizeFormatter({
std: "JEDEC", //'SI' = default | 'IEC' | 'JEDEC'
decimalPlaces: 2,
keepTrailingZeroes: false,
render: (literal, symbol) => `${literal} ${symbol}B`,
});

exports.jsonformat = (string) => {
return JSON.stringify(string, null, 2);
};

function format(...args) {
return util.format(...args);
}

exports.logic = (check, inp, out) => {
if (inp.length !== out.length)
throw new Error("Input and Output must have same length");
for (let i in inp) if (util.isDeepStrictEqual(check, inp[i])) return out[i];
return null;
};

exports.generateProfilePicture = async (buffer) => {
var jimp = await jimp_1.read(buffer);
var min = jimp.getWidth();
var max = jimp.getHeight();
var cropped = jimp.crop(0, 0, min, max);
return {
img: await cropped.scaleToFit(720, 720).getBufferAsync(jimp_1.MIME_JPEG),
preview: await cropped
.scaleToFit(720, 720)
.getBufferAsync(jimp_1.MIME_JPEG),
};
};

exports.bytesToSize = (bytes, decimals = 2) => {
if (bytes === 0) return "0 Bytes";

var k = 1024;
var dm = decimals < 0 ? 0 : decimals;
var sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];

var i = Math.floor(Math.log(bytes) / Math.log(k));

return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + " " + sizes[i];
};

exports.getSizeMedia = (path) => {
return new Promise((resolve, reject) => {
if (/http/.test(path)) {
axios.get(path).then((res) => {
let length = parseInt(res.headers["content-length"]);
let size = exports.bytesToSize(length, 3);
if (!isNaN(length)) resolve(size);
});
} else if (Buffer.isBuffer(path)) {
let length = Buffer.byteLength(path);
let size = exports.bytesToSize(length, 3);
if (!isNaN(length)) resolve(size);
} else {
reject("error gatau apah");
}
});
};

exports.parseMention = (text = "") => {
return [...text.matchAll(/@([0-9]{5,16}|0)/g)].map(
(v) => v[1] + "@s.whatsapp.net"
);
};

exports.GIFBufferToVideoBuffer = async (image) => {
var filename = `${Math.random().toString(36)}`;
await fs.writeFileSync(`./Bin/${filename}.gif`, image);
child_process.exec(
`ffmpeg -i ./Bin/${filename}.gif -movflags faststart -pix_fmt yuv420p -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" ./Bin/${filename}.mp4`
);
await sleep(4000);

var buffer5 = await fs.readFileSync(`./Bin/${filename}.mp4`);
Promise.all([
unlink(`./Bin/${filename}.mp4`),
unlink(`./Bin/${filename}.gif`),
]);
return buffer5;
};
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
exports.ŒΩkmake = async (ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñìc–ΩŒ±—Ç, store) => {
if (!ŒΩ‚Ñìc–ΩŒ±—Ç) return ŒΩ‚Ñìc–ΩŒ±—Ç;
let ŒΩproto = proto.WebMessageInfo;
if (ŒΩ‚Ñìc–ΩŒ±—Ç.key) {
ŒΩ‚Ñìc–ΩŒ±—Ç.id = ŒΩ‚Ñìc–ΩŒ±—Ç.key.id;
ŒΩ‚Ñìc–ΩŒ±—Ç.isBaileys = ŒΩ‚Ñìc–ΩŒ±—Ç.id.startsWith("BAE5") && ŒΩ‚Ñìc–ΩŒ±—Ç.id.length === 16;
ŒΩ‚Ñìc–ΩŒ±—Ç.chat = ŒΩ‚Ñìc–ΩŒ±—Ç.key.remoteJid;
ŒΩ‚Ñìc–ΩŒ±—Ç.fromMe = ŒΩ‚Ñìc–ΩŒ±—Ç.key.fromMe;
ŒΩ‚Ñìc–ΩŒ±—Ç.isGroup = ŒΩ‚Ñìc–ΩŒ±—Ç.chat.endsWith("@g.us");
ŒΩ‚Ñìc–ΩŒ±—Ç.sender = ŒΩ‚Ñì–∫—É—è—î.decodeJid(
(ŒΩ‚Ñìc–ΩŒ±—Ç.fromMe && ŒΩ‚Ñì–∫—É—è—î.user.id) ||
ŒΩ‚Ñìc–ΩŒ±—Ç.participant ||
ŒΩ‚Ñìc–ΩŒ±—Ç.key.participant ||
ŒΩ‚Ñìc–ΩŒ±—Ç.chat ||
""
);
if (ŒΩ‚Ñìc–ΩŒ±—Ç.isGroup)
ŒΩ‚Ñìc–ΩŒ±—Ç.participant = ŒΩ‚Ñì–∫—É—è—î.decodeJid(ŒΩ‚Ñìc–ΩŒ±—Ç.key.participant) || "";
}
if (ŒΩ‚Ñìc–ΩŒ±—Ç.message) {
ŒΩ‚Ñìc–ΩŒ±—Ç.mtype = getContentType(ŒΩ‚Ñìc–ΩŒ±—Ç.message);
ŒΩ‚Ñìc–ΩŒ±—Ç.msg =
ŒΩ‚Ñìc–ΩŒ±—Ç.mtype == "viewOnceMessage"
? ŒΩ‚Ñìc–ΩŒ±—Ç.message[ŒΩ‚Ñìc–ΩŒ±—Ç.mtype].message[
getContentType(ŒΩ‚Ñìc–ΩŒ±—Ç.message[ŒΩ‚Ñìc–ΩŒ±—Ç.mtype].message)
]
: ŒΩ‚Ñìc–ΩŒ±—Ç.message[ŒΩ‚Ñìc–ΩŒ±—Ç.mtype];
ŒΩ‚Ñìc–ΩŒ±—Ç.body =
ŒΩ‚Ñìc–ΩŒ±—Ç.message.conversation ||
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.caption ||
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.text ||
(ŒΩ‚Ñìc–ΩŒ±—Ç.mtype == "listResponseMessage" &&
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.singleSelectReply.selectedRowId) ||
(ŒΩ‚Ñìc–ΩŒ±—Ç.mtype == "buttonsResponseMessage" &&
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.selectedButtonId) ||
(ŒΩ‚Ñìc–ΩŒ±—Ç.mtype == "viewOnceMessage" && ŒΩ‚Ñìc–ΩŒ±—Ç.msg.caption) ||
ŒΩ‚Ñìc–ΩŒ±—Ç.text;
let quoted = (ŒΩ‚Ñìc–ΩŒ±—Ç.quoted = ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contextInfo
? ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contextInfo.quotedMessage
: null);
ŒΩ‚Ñìc–ΩŒ±—Ç.mentionedJid = ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contextInfo
? ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contextInfo.mentionedJid
: [];
if (ŒΩ‚Ñìc–ΩŒ±—Ç.quoted) {
let type = getContentType(quoted);
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted = ŒΩ‚Ñìc–ΩŒ±—Ç.quoted[type];
if (["productMessage"].includes(type)) {
type = getContentType(ŒΩ‚Ñìc–ΩŒ±—Ç.quoted);
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted = ŒΩ‚Ñìc–ΩŒ±—Ç.quoted[type];
}
if (typeof ŒΩ‚Ñìc–ΩŒ±—Ç.quoted === "string")
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted = {
text: ŒΩ‚Ñìc–ΩŒ±—Ç.quoted,
};
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.mtype = type;
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.id = ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contextInfo.stanzaId;
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.chat = ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contextInfo.remoteJid || ŒΩ‚Ñìc–ΩŒ±—Ç.chat;
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.isBaileys = ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.id
? ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.id.startsWith("BAE5") && ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.id.length === 16
: false;
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.sender = ŒΩ‚Ñì–∫—É—è—î.decodeJid(
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contextInfo.participant
);
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.fromMe =
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.sender === (ŒΩ‚Ñì–∫—É—è—î.user && ŒΩ‚Ñì–∫—É—è—î.user.id);
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.text =
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.text ||
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.caption ||
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.conversation ||
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.contentText ||
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.selectedDisplayText ||
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.title ||
"";
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.mentionedJid = ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contextInfo
? ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contextInfo.mentionedJid
: [];
ŒΩ‚Ñìc–ΩŒ±—Ç.getQuotedObj = ŒΩ‚Ñìc–ΩŒ±—Ç.getQuotedMessage = async () => {
if (!ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.id) return false;
let q = await store.loadMessage(ŒΩ‚Ñìc–ΩŒ±—Ç.chat, ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.id, ŒΩ‚Ñì–∫—É—è—î);
return exports.ŒΩkmake(ŒΩ‚Ñì–∫—É—è—î, q, store);
};
let vM = (ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.fakeObj = ŒΩproto.fromObject({
key: {
remoteJid: ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.chat,
fromMe: ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.fromMe,
id: ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.id,
},
message: quoted,
...(ŒΩ‚Ñìc–ΩŒ±—Ç.isGroup ? { participant: ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.sender } : {}),
}));
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.delete = () =>
ŒΩ‚Ñì–∫—É—è—î.sendMessage(ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.chat, { delete: vM.key });
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.copyNForward = (jid, forceForward = false, options = {}) =>
ŒΩ‚Ñì–∫—É—è—î.copyNForward(jid, vM, forceForward, options);
ŒΩ‚Ñìc–ΩŒ±—Ç.quoted.download = () => ŒΩ‚Ñì–∫—É—è—î.downloadMediaMessage(ŒΩ‚Ñìc–ΩŒ±—Ç.quoted);
}
}

if (ŒΩ‚Ñìc–ΩŒ±—Ç.msg.url)
ŒΩ‚Ñìc–ΩŒ±—Ç.download = () => ŒΩ‚Ñì–∫—É—è—î.downloadMediaMessage(ŒΩ‚Ñìc–ΩŒ±—Ç.msg);
ŒΩ‚Ñìc–ΩŒ±—Ç.text =
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.text ||
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.caption ||
ŒΩ‚Ñìc–ΩŒ±—Ç.message.conversation ||
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.contentText ||
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.selectedDisplayText ||
ŒΩ‚Ñìc–ΩŒ±—Ç.msg.title ||
"";
ŒΩ‚Ñìc–ΩŒ±—Ç.reply = (text, chatId = ŒΩ‚Ñìc–ΩŒ±—Ç.chat, options = {}) =>
Buffer.isBuffer(text)
? ŒΩ‚Ñì–∫—É—è—î.sendMedia(chatId, text, "file", "", ŒΩ‚Ñìc–ΩŒ±—Ç, { ...options })
: ŒΩ‚Ñì–∫—É—è—î.sendText(chatId, text, ŒΩ‚Ñìc–ΩŒ±—Ç, { ...options });
ŒΩ‚Ñìc–ΩŒ±—Ç.copy = () =>
exports.ŒΩkmake(ŒΩ‚Ñì–∫—É—è—î, ŒΩproto.fromObject(ŒΩproto.toObject(ŒΩ‚Ñìc–ΩŒ±—Ç)));
ŒΩ‚Ñìc–ΩŒ±—Ç.copyNForward = (
jid = ŒΩ‚Ñìc–ΩŒ±—Ç.chat,
forceForward = false,
options = {}
) => ŒΩ‚Ñì–∫—É—è—î.copyNForward(jid, ŒΩ‚Ñìc–ΩŒ±—Ç, forceForward, options);

return ŒΩ‚Ñìc–ΩŒ±—Ç;
};

let file = require.resolve(__filename);
fs.watchFile(file, () => {
fs.unwatchFile(file);
console.log(chalk.redBright(`Update ${__filename}`));
delete require.cache[file];
require(file);
});
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
/*
‚ïî‚ßâ‡ºª [ ùêïùê•ùê§ùê≤ùê´ùêûüïäÔ∏èùêåùêÆùê•ùê≠ùê¢ùêÉùêûùêØùê¢ùêúùêû ùêÄùêèùêà ] ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨! 
‚ïë üêûùêÉùêûùêØùêûùê•ùê®ùê©ùêûùê´ùê¨ +918436686758,917430922909
‚ïë 
‚ïë We won't be responsible for any kind of ban due to this bot.
‚ïë ŒΩ‚Ñì–∫—É—è—î was made for fun purpose and to make group management easier.
‚ïë It's your concern if you spam and gets your account banned.
‚ïë Also, Forks won't be entertained.
‚ïë If you fork this repo and edit plugins, it's your concern for further updates.
‚ïë Forking Repo is fine. But if you edit something we will not provide any help.
‚ïë In short, Fork At Your Own Risk.
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
*/
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
