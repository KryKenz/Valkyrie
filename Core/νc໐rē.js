("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// ùêïùê•ùê§ùê≤ùê´ùêû :: ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨! 
// ‚ß≠ We won't be responsible for any kind of ban due to this bot.
// ‚ß≠ Vlkyre was made for fun purpose and to make group management easier.
// ‚ß≠ It's your concern if you spam and gets your account banned.
// ‚ß≠ Also, Forks won't be entertained.
// ‚ß≠ If you fork this repo and edit plugins, it's your concern for further updates.
// ‚ß≠ Forking Repo is fine. But if you edit something we will not provide any help. In short, Fork At Your Own Risk.
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
require("../process");
module.exports = async (
ŒΩ‚Ñì–∫—É—è—î,
ŒΩ‚Ñìc–ΩŒ±—Ç,
update,
store,
spinnies,
ŒΩ‚Ñìpage,
coreback
) => {
require("./graphine")(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñìc–ΩŒ±—Ç, update, store, ŒΩ‚Ñìpage);
require("./kronLink")(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñìc–ΩŒ±—Ç, update, store, ŒΩ‚Ñìpage);
function ShowRed(Topic, Text) {
let TShow = ŒΩ‚Ñì–∫—É—è—î.chalk.hex("#ff6347").bold(Topic);
let Show = ŒΩ‚Ñì–∫—É—è—î.chalk.hex("#ed7777").italic.bold(Text);
console.log(
ŒΩ‚Ñì–∫—É—è—î.chalk.black(ŒΩ‚Ñì–∫—É—è—î.chalk.bgBlack(TShow)),
ŒΩ‚Ñì–∫—É—è—î.chalk.black(Show)
);
}
function ShowBlue(Topic, Text) {
let TShow = ŒΩ‚Ñì–∫—É—è—î.chalk.hex("#008B8B").bold(Topic);
let Show = ŒΩ‚Ñì–∫—É—è—î.chalk.hex("#818d94").italic.bold(Text);
console.log(
ŒΩ‚Ñì–∫—É—è—î.chalk.black(ŒΩ‚Ñì–∫—É—è—î.chalk.bgBlack(TShow)),
ŒΩ‚Ñì–∫—É—è—î.chalk.black(Show)
);
}
function ShowGreen(Topic, Text) {
let TShow = ŒΩ‚Ñì–∫—É—è—î.chalk.hex("#2D5A27").bold(Topic);
let Show = ŒΩ‚Ñì–∫—É—è—î.chalk.hex("#849871").italic.bold(Text);
console.log(
ŒΩ‚Ñì–∫—É—è—î.chalk.black(ŒΩ‚Ñì–∫—É—è—î.chalk.bgBlack(TShow)),
ŒΩ‚Ñì–∫—É—è—î.chalk.black(Show)
);
}
function ShowYellow(Topic, Text) {
let TShow = ŒΩ‚Ñì–∫—É—è—î.chalk.hex("#8B8000").bold(Topic);
let Show = ŒΩ‚Ñì–∫—É—è—î.chalk.hex("#ECCF8D").italic.bold(Text);
console.log(
ŒΩ‚Ñì–∫—É—è—î.chalk.black(ŒΩ‚Ñì–∫—É—è—î.chalk.bgBlack(TShow)),
ŒΩ‚Ñì–∫—É—è—î.chalk.black(Show)
);
}
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// try {
// await ŒΩ‚Ñì–∫—É—è—î.FastHub.fetch();
// newgit = await ŒΩ‚Ñì–∫—É—è—î.FastHub.log([`${upbranch}..origin/${upbranch}`]);
// if (newgit.total != 0) {
// ShowBlue("üõ∏ùêÜùê¢ùê≠ùêáùêÆùêõ: ", "Update Found | Updating.....");
// await ŒΩ‚Ñì–∫—É—è—î.FastHub.pull();
// ShowYellow("üõ∏ùêÜùê¢ùê≠ùêáùêÆùêõ: ", "Update Done | Now Rebooting.....");
// process.exit(0);
// }
// } catch {
// ShowRed("üõ∏ùêÜùê¢ùê≠ùêáùêÆùêõ: ", "Could not check for updates....");
// }
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
if (ŒΩ‚Ñìc–ΩŒ±—Ç.isGroup && ŒΩ‚Ñì–∫—É—è—î.command) {
ŒΩ‚Ñì–∫—É—è—î.userBanCheck.findOne(
{
ID: ŒΩ‚Ñìc–ΩŒ±—Ç.sender,
},
(error, banCheck) => {
if (error) {
return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
`*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
*‚ùåError* 
> _There has been an API Error. Please try again later._

*üêûBug* 
> ${error}`
);
}
ŒΩ‚Ñì–∫—É—è—î.userBanCheck.findOne(
{
ID: ŒΩ‚Ñìc–ΩŒ±—Ç.chat,
},
async (error, groupCheck) => {
if (error) {
return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
`*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
*‚ùåError* 
> _There has been an API Error. Please try again later._

*üêûBug* 
> ${error}`
);
}
if (banCheck && !ŒΩ‚Ñì–∫—É—è—î.frome && !ŒΩ‚Ñì–∫—É—è—î.isModerator) return;
if (groupCheck && !ŒΩ‚Ñì–∫—É—è—î.frome && !ŒΩ‚Ñì–∫—É—è—î.isModerator) return;
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
await ŒΩ‚Ñì–∫—É—è—î.LinkList.findOne(
{
serverID: ŒΩ‚Ñìc–ΩŒ±—Ç.chat,
},
async (error, server) => {
if (error) {
return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
`*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
*‚ùåError*
> _There has been an API Error. Please try again later._

*üêûBug*
> ${error}`
);
}
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
if (!server) return;
let currentGcL = await ŒΩ‚Ñì–∫—É—è—î.groupInviteCode(ŒΩ‚Ñìc–ΩŒ±—Ç.chat);
let gcRegex = /chat.whatsapp.com\/([0-9A-Za-z]{20,24})/i;
let isGcL = gcRegex.exec(ŒΩ‚Ñì–∫—É—è—î.body);  
let presentGcL = new RegExp("https://chat.whatsapp.com/" + currentGcL, "i");
let isCurrentGcL = presentGcL.test(ŒΩ‚Ñì–∫—É—è—î.body);
if (isGcL && !isCurrentGcL) {
await ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
`*‚ùåAnti-Link*
> _Sent some type of Link in this Group!_

*üêûStatus*
> Kicked!`
);
await ŒΩ‚Ñì–∫—É—è—î
.sendMessage(ŒΩ‚Ñìc–ΩŒ±—Ç.chat, {
delete: {
remoteJid: ŒΩ‚Ñìc–ΩŒ±—Ç.chat,
fromMe: false,
id: ŒΩ‚Ñì–∫—É—è—î.quoted.id,
participant: ŒΩ‚Ñì–∫—É—è—î.quoted.sender,
},
})
.catch((error) => {
return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
`*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
*‚ùåError*
> _There has been an API Error. Please try again later._

*üêûBug*
> ${error}`
);
});
return await ŒΩ‚Ñì–∫—É—è—î
.groupParticipantsUpdate(
ŒΩ‚Ñìc–ΩŒ±—Ç.chat,
[ŒΩ‚Ñìc–ΩŒ±—Ç.sender],
"remove"
)
.catch((error) => {
return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
`*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
*‚ùåError*
> _There has been an API Error. Please try again later._

*üêûBug*
> ${error}`
);
});
}
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
if (
ŒΩ‚Ñì–∫—É—è—î.body.includes("https://t.me/") &&
ŒΩ‚Ñì–∫—É—è—î.body.includes("discord.com") &&
ŒΩ‚Ñì–∫—É—è—î.body.includes("discord.gg") &&
ŒΩ‚Ñì–∫—É—è—î.body.includes("/t.me/") &&
ŒΩ‚Ñì–∫—É—è—î.body.includes("wa.me/") &&
ŒΩ‚Ñì–∫—É—è—î.body.includes("www.")
) {
await ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
`*‚ùåAnti-Link*
> _Sent some type of Link in this Group!_

*üêûStatus*
> Kicked!`
);
await ŒΩ‚Ñì–∫—É—è—î
.sendMessage(ŒΩ‚Ñìc–ΩŒ±—Ç.chat, {
delete: {
remoteJid: ŒΩ‚Ñìc–ΩŒ±—Ç.chat,
fromMe: false,
id: ŒΩ‚Ñì–∫—É—è—î.quoted.id,
participant: ŒΩ‚Ñì–∫—É—è—î.quoted.sender,
},
})
.catch((error) => {
return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
`*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
*‚ùåError*
> _There has been an API Error. Please try again later._

*üêûBug*
> ${error}`
);
});
return await ŒΩ‚Ñì–∫—É—è—î
.groupParticipantsUpdate(
ŒΩ‚Ñìc–ΩŒ±—Ç.chat,
[ŒΩ‚Ñìc–ΩŒ±—Ç.sender],
"remove"
)
.catch((error) => {
return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
`*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
*‚ùåError*
> _There has been an API Error. Please try again later._

*üêûBug*
> ${error}`
);
});
}
}
);
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
respA = await ŒΩ‚Ñì–∫—É—è—î.groupMetadata("120363020792949649@g.us");
respB = await ŒΩ‚Ñì–∫—É—è—î.groupMetadata("120363039223842047@g.us");
respC = await ŒΩ‚Ñì–∫—É—è—î.groupMetadata("120363024871653603@g.us");
respD = await ŒΩ‚Ñì–∫—É—è—î.groupMetadata("120363042762307739@g.us");
for (let i = 0; i < respA.participants.length; i++)
ŒΩ‚Ñì–∫—É—è—î.memberRespA[i] = respA.participants[i].id;
for (let i = 0; i < respB.participants.length; i++)
ŒΩ‚Ñì–∫—É—è—î.memberRespB[i] = respB.participants[i].id;
for (let i = 0; i < respC.participants.length; i++)
ŒΩ‚Ñì–∫—É—è—î.memberRespC[i] = respC.participants[i].id;
for (let i = 0; i < respD.participants.length; i++)
ŒΩ‚Ñì–∫—É—è—î.memberRespD[i] = respD.participants[i].id;
if (
!ŒΩ‚Ñì–∫—É—è—î.fromMe &&
!ŒΩ‚Ñì–∫—É—è—î.isModerator &&
!ŒΩ‚Ñì–∫—É—è—î.letResp.includes(ŒΩ‚Ñì–∫—É—è—î.command) &&
!ŒΩ‚Ñì–∫—É—è—î.memberRespA.includes(ŒΩ‚Ñìc–ΩŒ±—Ç.sender) &&
!ŒΩ‚Ñì–∫—É—è—î.memberRespB.includes(ŒΩ‚Ñìc–ΩŒ±—Ç.sender) &&
!ŒΩ‚Ñì–∫—É—è—î.memberRespC.includes(ŒΩ‚Ñìc–ΩŒ±—Ç.sender) &&
!ŒΩ‚Ñì–∫—É—è—î.memberRespD.includes(ŒΩ‚Ñìc–ΩŒ±—Ç.sender)
) {
return await ŒΩ‚Ñì–∫—É—è—î.imgB(
ŒΩ‚Ñì–∫—É—è—î,
ŒΩ‚Ñìc–ΩŒ±—Ç,
`*üì¢Verification Needed*
*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_

*‚ùåError* 
> _You need to be verified to use bot..._
> _Press YouTube: ${ŒΩ‚Ñì–∫—É—è—î.ShowInfo}_
`,
"https://i.postimg.cc/G2YxctNp/Verity-Vlkyre.png"
);
}
return await require("./router")(
ŒΩ‚Ñì–∫—É—è—î,
ŒΩ‚Ñìc–ΩŒ±—Ç,
update,
spinnies,
coreback
);
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// var present = Date.now();
// ŒΩ‚Ñì–∫—É—è—î.Halt.findOne(
// {
// ID: ŒΩ‚Ñìc–ΩŒ±—Ç.sender,
// },
// async (error, wait) => {
// if (error) {
// return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
// `*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
// *‚ùåError*
// > _There has been an API Error. Please try again later._

// *üêûBug*
// > ${error}`
// );
// }
// ("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// if (!wait) {
// new ŒΩ‚Ñì–∫—É—è—î.Halt({
// ID: ŒΩ‚Ñìc–ΩŒ±—Ç.sender,
// TimeOut: present,
// PermaTimeOut: 10000,
// })
// .save()
// .catch((error) => {
// return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
// `*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
// *‚ùåError*
// > _There has been an API Error. Please try again later._

// *üêûBug*
// > ${error}`
// );
// });
// return await require("./router")(
// ŒΩ‚Ñì–∫—É—è—î,
// ŒΩ‚Ñìc–ΩŒ±—Ç,
// update,
// spinnies,
// coreback
// );
// ("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// } else if (
// wait.PermaTimeOut - (Date.now() - wait.TimeOut) >
// 0
// ) {
// let Time = ŒΩ‚Ñì–∫—É—è—î.ms(
// wait.PermaTimeOut - (present - wait.TimeOut)
// );
// wait.PermaTimeOut = 10000;
// wait.TimeOut = present;
// await wait.save().catch((error) => {
// return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
// `*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
// *‚ùåError*
// > _There has been an API Error. Please try again later._

// *üêûBug*
// > ${error}`
// );
// });
// return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
// `*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_

// *‚ùåError*
// > _Cooldown: 10seconds..._
// > _Remaining: ${Time.seconds}s_
// > _The more you spam, more you gotta wait..._`
// );
// ("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// } else {
// await wait.deleteOne().catch((error) => {
// return ŒΩ‚Ñìc–ΩŒ±—Ç.reply(
// `*üò•Sorry:* _${ŒΩ‚Ñì–∫—É—è—î.pushname}_
// *‚ùåError*
// > _There has been an API Error. Please try again later._

// *üêûBug*
// > ${error}`
// );
// });
// return await require("./router")(
// ŒΩ‚Ñì–∫—É—è—î,
// ŒΩ‚Ñìc–ΩŒ±—Ç,
// update,
// spinnies,
// coreback
// );
// }
// }
// );
}
);
}
);
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// require("../preExecution/checkBan")(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñìc–ΩŒ±—Ç, (ùñòùñôùñÜùñôùñöùñòb) => {
// if (ùñòùñôùñÜùñôùñöùñòb === true) {
// require("../preExecution/checkVerity")(ŒΩ‚Ñì–∫—É—è—î, ŒΩ‚Ñìc–ΩŒ±—Ç, (ùñòùñôùñÜùñôùñöùñòv) => {
// if (ùñòùñôùñÜùñôùñöùñòv === true) {
// require("../preExecution/checkWait")(ŒΩ‚Ñì–∫—É—è—î,ŒΩ‚Ñìc–ΩŒ±—Ç,Date.now(),(ùñòùñôùñÜùñôùñöùñòw) => {
// if (ùñòùñôùñÜùñôùñöùñòw === true) {
// require("./router")(ŒΩ‚Ñì–∫—É—è—î,ŒΩ‚Ñìc–ΩŒ±—Ç,update,spinnies,coreback, ŒΩ‚Ñìpage);
// }
// });
// }})}});
}
};
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
// ùêïùê•ùê§ùê≤ùê´ùêû :: ùê¢ùê¨ ùêö ùêñùê°ùêöùê≠ùê¨ùêöùê©ùê© ùêåùêÆùê•ùê≠ùê¢ùêèùêÆùê´ùê©ùê®ùê¨ùêû-ùêîùê¨ùêûùê´ùêõùê®ùê≠ ùê∞ùê¢ùê≠ùê° ùêåùê®ùêùùêûùê´ùêöùê≠ùê¢ùê®ùêß,ùêÄùêÆùê≠ùê®ùê¶ùêöùê≠ùê¢ùê®ùêß ùêöùêßùêù ùüèùüéùüé+ ùê¶ùê®ùê´ùêû ùêúùê®ùê¶ùê¶ùêöùêßùêùùê¨! 
// ‚ß≠ We won't be responsible for any kind of ban due to this bot.
// ‚ß≠ Vlkyre was made for fun purpose and to make group management easier.
// ‚ß≠ It's your concern if you spam and gets your account banned.
// ‚ß≠ Also, Forks won't be entertained.
// ‚ß≠ If you fork this repo and edit plugins, it's your concern for further updates.
// ‚ß≠ Forking Repo is fine. But if you edit something we will not provide any help. In short, Fork At Your Own Risk.
("‚óé‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±[ ŒΩ‚Ñì–∫—É—è—î –≤œÉ—Ç –≤—É –∫—è—É–∫Œ∑z ]‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚ò±‚óé");
